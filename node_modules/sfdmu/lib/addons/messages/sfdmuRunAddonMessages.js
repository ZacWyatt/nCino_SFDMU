"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SFDMU_RUN_ADDON_MESSAGES = void 0;
var SFDMU_RUN_ADDON_MESSAGES;
(function (SFDMU_RUN_ADDON_MESSAGES) {
    SFDMU_RUN_ADDON_MESSAGES["General_CheckingArgs"] = "Checking the args ..";
    SFDMU_RUN_ADDON_MESSAGES["General_EventNotSupported"] = "The event %s is not supported by the %s. Only %s event(s) supported. The Add-On execution has been aborted";
    SFDMU_RUN_ADDON_MESSAGES["General_ArgumentsCannotBeParsed"] = "Error during parsing the Add-On arguments provided with the Script. The Add-On execution has been aborted";
    SFDMU_RUN_ADDON_MESSAGES["General_AddOnRuntimeError"] = "Error occured during executing the Add-On module %s. Check the module source code (if it's a Custom Add-On Module) and the args passed";
    SFDMU_RUN_ADDON_MESSAGES["General_MissingRequiredArguments"] = "Missing required arguments: %s. Can not start the Add-on";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_Initializing"] = "Initializing ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_Comparing"] = "Comparing records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_RetrievedRecords"] = "Fetched %s records";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_RecordsToBeProcessed"] = "There are %s records to process";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ProcessedRecords"] = "Total %s records have been processed, %s records failed";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_TotalDataVolume"] = "The total volume of the data to process: %s items of total %sMb";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_DataWillBeProcessedInChunksOfSize"] = "The processed data was splitted into %s chunks with max size of %sMb each chunk";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ProcessingChunk"] = "Processing chunk #%s of %s items";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_TargetIsFileWarning"] = "Cannot process Files on CSV sources or targets. Set a salesforce org as the Source and the Target";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_CouldNotFindObjectToProcessWarning"] = "Could not find object data to process";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ReadonlyOperationWarning"] = "Cannot process Files on Readonly objects. Define another operation";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ReadTargetContentDocumentLinks"] = "Fetching target ContentDocumentLink records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ReadSourceFeedAttachments"] = "Fetching source FeedAttachment records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ReadTargetFeedAttachments"] = "Fetching target FeedAttachment records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_DeleteTargetContentDocuments"] = "Deleting target ContentDocument records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_NoSourceRecords"] = "There are no linked source records found to process.";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ReadTargetContentVersions"] = "Fetching target ContentVersion records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ReadSourceContentDocumentLinks"] = "Fetching source ContentDocumentLink records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ReadSourceContentVersions"] = "Fetching source ContentVersion records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ExportingContentVersions"] = "Transferring ContentVersion binary data ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ExportingContentDocumentLinks"] = "Creating target ContentDocumentLink records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_ExportingFeedAttachments"] = "Create target FeedAttachment records ..";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_NothingToProceed"] = "There are no records to proceed";
    SFDMU_RUN_ADDON_MESSAGES["ExportFiles_NothingToUpdate"] = "The target Files were deleted. There is no data to Update. Define another operation";
    SFDMU_RUN_ADDON_MESSAGES["RecordsTransform_SourceTaskNotFound"] = "[WARN] [Field %s]: The task associated with the sobject %s has not been found. The field will be skipped";
    SFDMU_RUN_ADDON_MESSAGES["RecordsTransform_SourceFieldNotFound"] = "[WARN] [Field %s]: This field was not found in the source records of the sobject %s. The field will be skipped";
    SFDMU_RUN_ADDON_MESSAGES["RecordsTransform_TargetFieldNotFound"] = "[WARN] [Field %s]: This field was not found in the target records of the sobject %s. The field will be skipped";
    SFDMU_RUN_ADDON_MESSAGES["RecordsTransform_CreatingMappingScheme"] = "Creating the transformation map ..";
    SFDMU_RUN_ADDON_MESSAGES["RecordsTransform_Tranforming"] = "Transforming records ..";
    SFDMU_RUN_ADDON_MESSAGES["RecordsTransform_TotallyTranformed"] = "Totally transformed %s records";
    SFDMU_RUN_ADDON_MESSAGES["RecordsTransform_AppliedValueMapping"] = "Applying the Values Mapping";
    SFDMU_RUN_ADDON_MESSAGES["FilterUnknown"] = "Unknown filter %s";
    SFDMU_RUN_ADDON_MESSAGES["FilteringEnd"] = "%s records has been filtered (%s remaining)";
    SFDMU_RUN_ADDON_MESSAGES["FilterOperationError"] = "Error in the target RecordsFilter module %s: %s";
    SFDMU_RUN_ADDON_MESSAGES["BadwordFilter_badwordsDetectStart"] = "Filtering results on badwords from file %s on %s..";
    SFDMU_RUN_ADDON_MESSAGES["BadwordFilter_badwordsDetectFileError"] = "Badwords file not found at location %s";
    SFDMU_RUN_ADDON_MESSAGES["BadwordFilter_badwordsDetectFileEmptyList"] = "Badwords file %s must contain a property \"badwords\" with at least one word";
    SFDMU_RUN_ADDON_MESSAGES["BadwordFilter_badwordsDetectRegex"] = "Full badwords detection regular expression %s";
    SFDMU_RUN_ADDON_MESSAGES["BadwordFilter_badwordsDetected"] = "- %s: %s";
})(SFDMU_RUN_ADDON_MESSAGES || (exports.SFDMU_RUN_ADDON_MESSAGES = SFDMU_RUN_ADDON_MESSAGES = {}));
//# sourceMappingURL=sfdmuRunAddonMessages.js.map