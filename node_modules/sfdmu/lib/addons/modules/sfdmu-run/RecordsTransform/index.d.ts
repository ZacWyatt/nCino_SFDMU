import SfdmuRunAddonModule from "../../../components/sfdmu-run/sfdmuRunAddonModule";
import AddonResult from "../../../components/common/addonResult";
import IAddonContext from "../../../components/common/IAddonContext";
import SfdmuRunAddonTask from "../../../components/sfdmu-run/sfdmuRunAddonTask";
interface ITransformation {
    targetObject: string;
    targetField: string;
    formula: string;
    includeLookupFields: Array<string>;
    expressions: Array<string>;
    targetTask: SfdmuRunAddonTask;
    lookupFieldMap: Map<string, string[]>;
}
interface IField {
    alias: string;
    sourceObject: string;
    sourceField: string;
    includeLookupFields: Array<string>;
    includeFields: Array<string>;
    isConstant: boolean;
    lookupExpression: string;
    lookupSource: 'source' | 'target';
    valueSource: 'source' | 'target';
    sourceTask: SfdmuRunAddonTask;
    lookupFieldMap: Map<string, string[]>;
    constantValue: any;
    targetToSourceRecordMap: Map<any, any>;
}
interface IOnExecuteArguments {
    fields: Array<IField>;
    transformations: Array<ITransformation>;
}
export default class RecordsTransform extends SfdmuRunAddonModule {
    onInit(context: IAddonContext, args: IOnExecuteArguments): Promise<AddonResult>;
    onExecute(context: IAddonContext, args: IOnExecuteArguments): Promise<AddonResult>;
}
export {};
