import { FieldType } from 'jsforce';
import { ScriptObject } from '../';
import { ISfdmuRunCustomAddonSFieldDescribe } from '../../../addons/modules/sfdmu-run/custom-addons/package';
type ISFieldDescribe = ISfdmuRunCustomAddonSFieldDescribe;
export default class SFieldDescribe implements ISFieldDescribe {
    constructor(init?: Partial<SFieldDescribe>);
    objectName: string;
    name: string;
    type: FieldType | "dynamic";
    label: string;
    updateable: boolean;
    creatable: boolean;
    cascadeDelete: boolean;
    autoNumber: boolean;
    unique: boolean;
    nameField: boolean;
    custom: boolean;
    calculated: boolean;
    lookup: boolean;
    referencedObjectType: string;
    polymorphicReferenceObjectType: string;
    length: number;
    originalReferencedObjectType: string;
    isDescribed: boolean;
    scriptObject: ScriptObject;
    parentLookupObject: ScriptObject;
    child__rSFields: SFieldDescribe[];
    __rSField: SFieldDescribe;
    idSField: SFieldDescribe;
    isPolymorphicFieldDefinition: boolean;
    isPolymorphicField: boolean;
    getPolymorphicQueryField(fieldName: string): string;
    m_targetName: string;
    get targetName(): string;
    get isMapped(): boolean;
    get readonly(): boolean;
    get person(): boolean;
    get standard(): boolean;
    get isFormula(): boolean;
    get isMasterDetail(): boolean;
    get isBoolean(): boolean;
    get isTextual(): boolean;
    get isComplex(): boolean;
    get isContainsComplex(): boolean;
    get is__r(): boolean;
    get isComplexOr__r(): boolean;
    get isSimpleNotLookup(): boolean;
    get isSimple(): boolean;
    get isSimpleReference(): boolean;
    get isSimpleSelfReference(): boolean;
    get isExternalIdField(): boolean;
    get isOriginalExternalIdField(): boolean;
    get name__r(): string;
    get nameId(): string;
    get fullName__r(): string;
    get fullOriginalName__r(): string;
    get fullIdName__r(): string;
    get __rNames(): string[];
    dynamic(key: string): SFieldDescribe;
    complex(key: string): SFieldDescribe;
}
export {};
