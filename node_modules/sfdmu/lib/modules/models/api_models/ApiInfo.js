"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const enumerations_1 = require("../../components/common_components/enumerations");
class ApiInfo {
    constructor(init) {
        this.jobState = "Undefined";
        this.informationMessageData = new Array();
        Object.assign(this, init);
        this.resultRecords = this.resultRecords || new Array();
    }
    get messageImportance() {
        switch (this.resultStatus) {
            default:
                return enumerations_1.MESSAGE_IMPORTANCE.Silent;
            case enumerations_1.RESULT_STATUSES.ApiOperationStarted:
            case enumerations_1.RESULT_STATUSES.ApiOperationFinished:
                return enumerations_1.MESSAGE_IMPORTANCE.Normal;
            case enumerations_1.RESULT_STATUSES.InProgress:
            case enumerations_1.RESULT_STATUSES.DataUploaded:
            case enumerations_1.RESULT_STATUSES.BatchCreated:
            case enumerations_1.RESULT_STATUSES.JobCreated:
                return enumerations_1.MESSAGE_IMPORTANCE.Low;
            case enumerations_1.RESULT_STATUSES.Completed:
                if (this.numberRecordsFailed == 0)
                    return enumerations_1.MESSAGE_IMPORTANCE.Normal;
                else
                    return enumerations_1.MESSAGE_IMPORTANCE.Warn;
            case enumerations_1.RESULT_STATUSES.ProcessError:
            case enumerations_1.RESULT_STATUSES.FailedOrAborted:
                return enumerations_1.MESSAGE_IMPORTANCE.Error;
        }
    }
    get resultStatus() {
        if (!!this.errorMessage) {
            return enumerations_1.RESULT_STATUSES.ProcessError;
        }
        switch (this.jobState) {
            default:
                return enumerations_1.RESULT_STATUSES.Undefined;
            case "Info":
                return enumerations_1.RESULT_STATUSES.Information;
            case "OperationStarted":
                return enumerations_1.RESULT_STATUSES.ApiOperationStarted;
            case "OperationFinished":
                return enumerations_1.RESULT_STATUSES.ApiOperationFinished;
            case "Open":
                return enumerations_1.RESULT_STATUSES.JobCreated;
            case "UploadStart":
                return enumerations_1.RESULT_STATUSES.BatchCreated;
            case "UploadComplete":
                return enumerations_1.RESULT_STATUSES.DataUploaded;
            case "InProgress":
            case "Closed":
                return enumerations_1.RESULT_STATUSES.InProgress;
            case "Aborted":
            case "Failed":
                return enumerations_1.RESULT_STATUSES.FailedOrAborted;
            case "JobComplete":
                return enumerations_1.RESULT_STATUSES.Completed;
        }
    }
}
exports.default = ApiInfo;
//# sourceMappingURL=ApiInfo.js.map