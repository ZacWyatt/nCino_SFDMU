import 'reflect-metadata';
import 'es6-shim';
import { ObjectFieldMapping, ScriptObject, ScriptObjectSet, ScriptOrg, SObjectDescribe } from '../';
import ISfdmuRunScript from '../../../addons/components/sfdmu-run/ISfdmuRunScript';
import ISfdmuRunScriptObject from '../../../addons/components/sfdmu-run/ISfdmuRunScriptObject';
import SfdmuRunAddonManager from '../../../addons/components/sfdmu-run/sfdmuRunAddonManager';
import SfdmuRunAddonRuntime from '../../../addons/components/sfdmu-run/sfdmuRunAddonRuntime';
import { IAppScript } from '../../app/appModels';
import { DATA_CACHE_TYPES } from '../../components/common_components/enumerations';
import { Logger } from '../../components/common_components/logger';
import ICommandRunInfo from '../common_models/ICommandRunInfo';
import IPluginInfo from '../common_models/IPluginInfo';
import MigrationJob from '../job_models/migrationJob';
import ScriptAddonManifestDefinition from './scriptAddonManifestDefinition';
export default class Script implements IAppScript, ISfdmuRunScript {
    orgs: ScriptOrg[];
    objects: ScriptObject[];
    excludedObjects: string[];
    objectSets: ScriptObjectSet[];
    pollingIntervalMs: number;
    pollingQueryTimeoutMs: number;
    concurrencyMode: "Serial" | "Parallel";
    bulkThreshold: number;
    queryBulkApiThreshold: number;
    bulkApiVersion: string;
    bulkApiV1BatchSize: number;
    restApiBatchSize: number;
    allOrNone: boolean;
    promptOnMissingParentObjects: boolean;
    promptOnIssuesInCSVFiles: boolean;
    validateCSVFilesOnly: boolean;
    apiVersion: string;
    createTargetCSVFiles: boolean;
    importCSVFilesAsIs: boolean;
    alwaysUseRestApiToUpdateRecords: boolean;
    excludeIdsFromCSVFiles: boolean;
    keepObjectOrderWhileExecute: boolean;
    allowFieldTruncation: boolean;
    simulationMode: boolean;
    proxyUrl: string;
    csvReadFileDelimiter: ',' | ';';
    csvWriteFileDelimiter: ',' | ';';
    useSeparatedCSVFiles: boolean;
    binaryDataCache: DATA_CACHE_TYPES;
    sourceRecordsCache: DATA_CACHE_TYPES;
    parallelBinaryDownloads: number;
    parallelBulkJobs: number;
    parallelRestJobs: number;
    beforeAddons: ScriptAddonManifestDefinition[];
    afterAddons: ScriptAddonManifestDefinition[];
    dataRetrievedAddons: ScriptAddonManifestDefinition[];
    logger: Logger;
    sourceOrg: ScriptOrg;
    targetOrg: ScriptOrg;
    basePath: string;
    objectsMap: Map<string, ScriptObject>;
    sourceTargetFieldMapping: Map<string, ObjectFieldMapping>;
    job: MigrationJob;
    addonManager: SfdmuRunAddonManager;
    runInfo: ICommandRunInfo;
    canModify: string;
    objectSetIndex: number;
    useSf: boolean;
    logfullquery: boolean;
    extraSObjectDescriptions: Map<string, SObjectDescribe>;
    get sFOrg(): ScriptOrg;
    get addonRuntime(): SfdmuRunAddonRuntime;
    get isPersonAccountEnabled(): boolean;
    get bulkApiVersionNumber(): number;
    get targetDirectoryPath(): string;
    get targetDirectory(): string;
    get sourceDirectoryPath(): string;
    get sourceDirectory(): string;
    get rawSourceDirectory(): string;
    get rawSourceDirectoryPath(): string;
    get reportsDirectoryPath(): string;
    get reportsDirectory(): string;
    get binaryCacheDirectoryPath(): string;
    get binaryCacheDirectory(): string;
    get sourceRecordsCacheDirectoryPath(): string;
    get sourceRecordsCacheDirectory(): string;
    get hasDeleteFromSourceObjectOperation(): boolean;
    get hasDeleteByHierarchyOperation(): boolean;
    get hasUseSourceCSVFile(): boolean;
    setupAsync(pinfo: IPluginInfo, logger: Logger, sourceUsername: string, targetUsername: string, basePath: string, apiVersion: string, canModify: string, simulation: boolean, useSf: boolean, logfullquery: boolean): Promise<void>;
    cleanupDirectories(): Promise<void>;
    processObjectsMetadataAsync(): Promise<void>;
    describeExtraObjectAsync(objectName: string): Promise<void>;
    verifyOrgs(): void;
    loadFieldMappingConfiguration(): void;
    loadFieldMappingConfigurationFileAsync(): Promise<void>;
    getAllAddOns(): ScriptAddonManifestDefinition[];
    addScriptObject(object: ISfdmuRunScriptObject): ISfdmuRunScriptObject;
}
