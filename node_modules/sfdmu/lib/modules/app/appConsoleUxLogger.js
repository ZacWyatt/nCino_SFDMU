"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const readline = require('readline');
const { stdin: input, stdout: output } = require('process');
const rl = readline.createInterface({ input, output });
class AppConsoleLogger {
    constructor() {
        this.log = (message) => {
            console.log(`${message}`);
        };
        this.styledJSON = (message) => console.log('\x1b[34m%s\x1b[0m', JSON.stringify(JSON.parse(message || '{}'), null, 4));
        this.warn = (message) => console.warn('\x1b[33m%s\x1b[0m', `${message}`);
        this.error = (message) => console.error('\x1b[31m%s\x1b[0m', `${message}`);
        this.styledObject = (message) => console.log('\x1b[34m%s\x1b[0m', JSON.stringify(message || {}, null, 4));
        this.table = (message) => console.log(message);
        this.prompt = (message, params) => {
            return new Promise(resolve => {
                let timeout;
                if (params && params.timeout) {
                    timeout = setTimeout(() => {
                        rl.close();
                        resolve(params.default);
                    }, params.timeout);
                }
                rl.question(message + ' ', function (answer) {
                    if (timeout) {
                        clearTimeout(timeout);
                    }
                    rl.close();
                    resolve(answer);
                });
            });
        };
        this.styledHeader = (message) => console.log('\x1b[32m%s\x1b[0m', '\n'
            + String(message || '').toUpperCase()
            + '\n=================\n');
        this.startSpinner = () => void (0);
        this.stopSpinner = () => void (0);
        this.setSpinnerStatus = () => void (0);
    }
}
exports.default = AppConsoleLogger;
//# sourceMappingURL=appConsoleUxLogger.js.map