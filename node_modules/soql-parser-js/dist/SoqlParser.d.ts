import { Query } from './models/SoqlQuery.model';
export interface ConfigBase {
    logging?: boolean;
}
export interface SoqlQueryConfig extends ConfigBase {
    continueIfErrors?: boolean;
}
/**
 * @description For a given soql query, parse the query and return a parsed SoqlQuery object
 * @param {soql} String SOQL query
 * @param {SoqlQueryConfig} SoqlQueryConfig optional configuration
 * @returns SoqlQuery
 */
export declare function parseQuery(soql: string, config?: Partial<SoqlQueryConfig>): Query;
/**
 * @description Parse query to determine if the query is valid.
 * @param {soql} String SOQL query
 * @param {logging} boolean optional Prints out logging information
 * @returns boolean
 */
export declare function isQueryValid(soql: string, config?: ConfigBase): boolean;
