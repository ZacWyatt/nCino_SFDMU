export interface FieldData {
    fields: {
        text: string;
        isSubquery: boolean;
        prefix: string;
        suffix: string;
    }[];
    isSubquery: boolean;
    lineBreaks: number[];
}
export interface FormatOptions {
    numIndent?: number;
    fieldMaxLineLen?: number;
    fieldSubqueryParensOnOwnLine?: boolean;
    whereClauseOperatorsIndented?: boolean;
    logging?: boolean;
}
/**
 * Formatter
 * This class aids in building a SOQL query from a parse query
 * and optionally formats parts of the query based on the configuration options passed in
 */
export declare class Formatter {
    enabled: boolean;
    private options;
    private currIndent;
    constructor(enabled: boolean, options: FormatOptions);
    private log(data);
    private getIndent();
    private repeatChar(numTimes, char);
    setSubquery(isSubquery: boolean): void;
    stepCurrIndex(num: number): void;
    /**
     * Format fields
     * @param fieldData
     */
    formatFields(fieldData: FieldData): void;
    /**
     * Formats subquery with additional indents
     */
    formatSubquery(queryStr: string, numTabs?: number, incrementTabsWhereClauseOpIndent?: boolean): string;
    /**
     * Formats all clauses that do not have a more specialized format function
     * If formatting is enabled, then this will put a new line before the clause
     * @param clause
     * @returns clause
     */
    formatClause(clause: string): string;
    formatOrderByArray(groupBy: string[]): string;
    formatWhereClauseOperators(operator: string, whereClause: string): string;
    formatAddNewLine(alt?: string): string;
}
